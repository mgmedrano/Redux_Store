{"ast":null,"code":"import _objectSpread from\"/Users/michaelmedrano/Documents/GitHub/Redux_Store/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{Link}from\"react-router-dom\";import{pluralize}from\"../../utils/helpers\";// import { useStoreContext } from \"../../utils/GlobalState\";\nimport{ADD_TO_CART,UPDATE_CART_QUANTITY}from\"../../utils/actions\";import{idbPromise}from\"../../utils/helpers\";import{useSelector,useDispatch}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProductItem(item){// const [state, dispatch] = useStoreContext();\nvar image=item.image,name=item.name,_id=item._id,price=item.price,quantity=item.quantity;var cart=state.cart;var state=useSelector(function(state){return state;});var dispatch=useDispatch();var addToCart=function addToCart(){var itemInCart=cart.find(function(cartItem){return cartItem._id===_id;});if(itemInCart){dispatch({type:UPDATE_CART_QUANTITY,_id:_id,purchaseQuantity:parseInt(itemInCart.purchaseQuantity)+1});idbPromise('cart','put',_objectSpread(_objectSpread({},itemInCart),{},{purchaseQuantity:parseInt(itemInCart.purchaseQuantity)+1}));}else{dispatch({type:ADD_TO_CART,product:_objectSpread(_objectSpread({},item),{},{purchaseQuantity:1})});idbPromise('cart','put',_objectSpread(_objectSpread({},item),{},{purchaseQuantity:1}));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"card px-1 py-1\",children:[/*#__PURE__*/_jsxs(Link,{to:\"/products/\".concat(_id),children:[/*#__PURE__*/_jsx(\"img\",{alt:name,src:\"/images/\".concat(image)}),/*#__PURE__*/_jsx(\"p\",{children:name})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[quantity,\" \",pluralize(\"item\",quantity),\" in stock\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"$\",price]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:addToCart,children:\"Add to cart\"})]});}export default ProductItem;","map":{"version":3,"sources":["/Users/michaelmedrano/Documents/GitHub/Redux_Store/client/src/components/ProductItem/index.js"],"names":["React","Link","pluralize","ADD_TO_CART","UPDATE_CART_QUANTITY","idbPromise","useSelector","useDispatch","ProductItem","item","image","name","_id","price","quantity","cart","state","dispatch","addToCart","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","product"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,SAAT,KAA0B,qBAA1B,CACA;AACA,OAASC,WAAT,CAAsBC,oBAAtB,KAAkD,qBAAlD,CACA,OAASC,UAAT,KAA2B,qBAA3B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,C,wFAEA,QAASC,CAAAA,WAAT,CAAqBC,IAArB,CAA2B,CAEzB;AAEA,GACEC,CAAAA,KADF,CAMID,IANJ,CACEC,KADF,CAEEC,IAFF,CAMIF,IANJ,CAEEE,IAFF,CAGEC,GAHF,CAMIH,IANJ,CAGEG,GAHF,CAIEC,KAJF,CAMIJ,IANJ,CAIEI,KAJF,CAKEC,QALF,CAMIL,IANJ,CAKEK,QALF,CAQA,GAAQC,CAAAA,IAAR,CAAiBC,KAAjB,CAAQD,IAAR,CAEA,GAAMC,CAAAA,KAAK,CAAGV,WAAW,CAAC,SAAAU,KAAK,QAAIA,CAAAA,KAAJ,EAAN,CAAzB,CACA,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CAEA,GAAMW,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMC,CAAAA,UAAU,CAAGJ,IAAI,CAACK,IAAL,CAAU,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACT,GAAT,GAAiBA,GAA/B,EAAV,CAAnB,CACA,GAAIO,UAAJ,CAAgB,CACdF,QAAQ,CAAC,CACPK,IAAI,CAAElB,oBADC,CAEPQ,GAAG,CAAEA,GAFE,CAGPW,gBAAgB,CAAEC,QAAQ,CAACL,UAAU,CAACI,gBAAZ,CAAR,CAAwC,CAHnD,CAAD,CAAR,CAKAlB,UAAU,CAAC,MAAD,CAAS,KAAT,gCACLc,UADK,MAERI,gBAAgB,CAAEC,QAAQ,CAACL,UAAU,CAACI,gBAAZ,CAAR,CAAwC,CAFlD,GAAV,CAID,CAVD,IAUO,CACLN,QAAQ,CAAC,CACPK,IAAI,CAAEnB,WADC,CAEPsB,OAAO,gCAAOhB,IAAP,MAAac,gBAAgB,CAAE,CAA/B,EAFA,CAAD,CAAR,CAIAlB,UAAU,CAAC,MAAD,CAAS,KAAT,gCAAqBI,IAArB,MAA2Bc,gBAAgB,CAAE,CAA7C,GAAV,CACD,CACF,CAnBD,CAqBA,mBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,MAAC,IAAD,EAAM,EAAE,qBAAeX,GAAf,CAAR,wBACE,YACE,GAAG,CAAED,IADP,CAEE,GAAG,mBAAaD,KAAb,CAFL,EADF,cAKE,mBAAIC,IAAJ,EALF,GADF,cAQE,oCACE,uBAAMG,QAAN,KAAiBZ,SAAS,CAAC,MAAD,CAASY,QAAT,CAA1B,eADF,cAEE,4BAAQD,KAAR,GAFF,GARF,cAYE,eAAQ,OAAO,CAAEK,SAAjB,yBAZF,GADF,CAgBD,CAED,cAAeV,CAAAA,WAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\n// import { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction ProductItem(item) {\n\n  // const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n"]},"metadata":{},"sourceType":"module"}